ALTER SESSION SET WEEK_OF_YEAR_POLICY = 1;

CREATE or REPLACE TABLE SALESFACT_TABLE;


CREATE or REPLACE TABLE SALESFACT_TABLE as SELECT O.SALESORDERID, O.ORDERDATE, O.ORDERQTY,O.UNITPRICE,O.UNITPRICEDISCOUNT,O.SHIPDATE,O.DUEDATE, C.CUSTOMERID,C.FULLNAME,P.PRODUCTID,P.PRODUCTNAME,P.MODELNAME,P.MAKEFLAG,P.STANDARDCOST,P.LISTPRICE,PC.CATEGORYNAME,PSC.SUBCATEGORYNAME,V.VENDORID,V.VENDORNAME,V.ACCOUNTNUMBER,V.CREDITRATING,V.ACTIVEFLAG,
decode(extract ('dayofweek_iso',O.ORDERDATE),
  1, 'Weekday',
  2, 'Weekday',
  3, 'Weekday',
  4, 'Weekday',
  5, 'Weekday',
  6, 'Weekend',
  7, 'Weekend') as DAYTYPE
 ,
decode(extract ('dayofweek_iso',O.ORDERDATE),
  1, 'Monday',
  2, 'Tuesday',
  3, 'Wednesday',
  4, 'Thursday',
  5, 'Friday',
  6, 'Saturday',
  7, 'Sunday') as DAY, DAYNAME(O.ORDERDATE) "DAYSHORT",
  CASE
        WHEN MONTH(O.ORDERDATE) BETWEEN 1  AND 3  THEN  'Qtr1'
        WHEN MONTH(O.ORDERDATE) BETWEEN 4  AND 6  THEN  'Qtr2'
        WHEN MONTH(O.ORDERDATE) BETWEEN 7  AND 9  THEN 'Qtr'
        WHEN MONTH(O.ORDERDATE) BETWEEN 10 AND 12 THEN  'Qtr4'
    END AS QUARTER1,  
CASE 
    WHEN DATE_PART(QUARTER, O.ORDERDATE::DATE) BETWEEN 1 AND 3 THEN CONCAT(extract (year from O.ORDERDATE),'-Q1')
    WHEN DATE_PART(QUARTER, O.ORDERDATE::DATE) BETWEEN 4 AND 6 THEN CONCAT(extract (year from O.ORDERDATE),'-Q2')
    WHEN DATE_PART(QUARTER, O.ORDERDATE::DATE) BETWEEN 7 AND 9 THEN CONCAT(extract (year from O.ORDERDATE),'-Q3')
    WHEN DATE_PART(QUARTER, O.ORDERDATE::DATE) BETWEEN 10 AND 12 THEN CONCAT(extract (year from O.ORDERDATE),'-Q4')
    END AS "QUARTERYEAR",
MONTH(O.ORDERDATE) "MONTH",  CONCAT(MONTHNAME(O.ORDERDATE),'-',extract (year from O.ORDERDATE)) AS MONTHNAME, CONCAT(extract (year from O.ORDERDATE),'-',MONTH(O.ORDERDATE)) AS MONTHYEAR,
       
       FLOOR((DAYOFMONTH(O.ORDERDATE) - 1) / 7) + 
       CASE WHEN DAYOFMONTH(O.ORDERDATE) % 7 > 0 THEN 1 ELSE 0 END 
       AS "WEEKOFMONTH"
 ,   CONCAT('Wk-',FLOOR((DAYOFMONTH(O.ORDERDATE) - 1) / 7) + 
       CASE WHEN DAYOFMONTH(O.ORDERDATE) % 7 > 0 THEN 1 ELSE 0 END) AS WEEKNAME, extract (year from O.ORDERDATE) as YR , DATEDIFF(month, O.ORDERDATE::DATE, O.SHIPDATE::DATE) "DELIVERYTAT", case
    when O.SHIPDATE<O.DUEDATE then 'Early'
    when O.SHIPDATE=O.DUEDATE then 'Normal'
    when O.SHIPDATE>O.DUEDATE then 'Late'
    else 'unknown'
  end as SHIPMENTSTATUS, case
    when P.MAKEFLAG=1 then 'Manufactured'
    when P.MAKEFLAG=0 then 'Purchased'
    else 'unknown'
  end as PRODUCTTYPE, O.ORDERQTY*(O.UNITPRICE-(O.UNITPRICE*O.UNITPRICEDISCOUNT)) "ORDERVALUE",(O.TAXAMT/(select count(salesorderid) from orders O1 WHERE O1.SALESORDERID=O.SALESORDERID)) AS TAXAMOUNT, O.FREIGHT AS FRIEIGHTA,
  (O.FREIGHT/(select count(salesorderid) from orders O1 WHERE O1.SALESORDERID=O.SALESORDERID)) AS  FREIGHTAMOUNT,
   (ORDERVALUE+O.TAXAMT+O.FREIGHT) AS EXTENDEDAMOUNT, sum(EXTENDEDAMOUNT) over (order by O.SALESORDERID ASC ROWS between unbounded preceding and current row) AS SUBTOTOAL
   
FROM DEMO_DB.SCHEMA_01.CUSTOMERS C
JOIN DEMO_DB.SCHEMA_01.ORDERS O ON C.CUSTOMERID=O.CUSTOMERID
JOIN DEMO_DB.SCHEMA_01.PRODUCTS P ON O.PRODUCTID= P.PRODUCTID
JOIN DEMO_DB.SCHEMA_01.PRODUCTSUBCATEGORIES PSC ON P.SUBCATEGORYID=PSC.SUBCATEGORYID
JOIN DEMO_DB.SCHEMA_01.PRODUCTCATEGORIES PC ON PSC.CATEGORYID=PC.CATEGORYID
JOIN DEMO_DB.SCHEMA_01.VENDORPRODUCT VP ON O.PRODUCTID=VP.PRODUCTID
JOIN DEMO_DB.SCHEMA_01.VENDORS V ON VP.VENDORID=V.VENDORID 
 ;


 
select * from SALESFACT_TABLE;
select count(*) from DEMO_DB.SCHEMA_01."customers";
select count(*) from DEMO_DB.SCHEMA_01."employees";
select count(*) from DEMO_DB.SCHEMA_01."orders";
select count(*) from DEMO_DB.SCHEMA_01."orders_master";
select count(*) from DEMO_DB.SCHEMA_01."productcategories";
select count(*) from DEMO_DB.SCHEMA_01."vendorproduct";
select count(*) from DEMO_DB.SCHEMA_01."products";
select count(*) from DEMO_DB.SCHEMA_01."vendors";